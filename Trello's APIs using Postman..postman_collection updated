{
	"info": {
		"_postman_id": "734f7f99-66a6-4295-bbbe-409237c9546f",
		"name": "Trello's APIs using Postman.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23658964"
	},
	"item": [
		{
			"name": "CreateBoard",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"closed\\\":false\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"canBePublic\\\":true\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"canInvite\\\":true\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/boards/?name=hassanl&key={{Key}}&token={{Token}}",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "hassanl"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "idOrganizations",
							"value": "62432a2700d3037fbcb52534",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"responseData = pm.response.json();\r",
							"tests[\"length: \"  + responseData.idBoards.length] = true;\r",
							"console.log(responseData.idBoards.length);\r",
							"console.log(responseData);\r",
							"pm.environment.get(\"First_Board\");\r",
							"pm.environment.set(\"First_Board\", responseData.idBoards[0]);\r",
							"console.log(responseData.idBoards[0]);\r",
							"pm.environment.get(\"Last_Board\");\r",
							"pm.environment.set(\"Last_Board\", responseData.idBoards[responseData.idBoards.length-1]);\r",
							"console.log(responseData.idBoards[responseData.idBoards.length-1]);\r",
							"pm.test(\"response size\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.equal(1);\r",
							"});\r",
							"pm.test(\"response size\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.greaterThan(1);\r",
							"});\r",
							"pm.test(\"response size\", function () {\r",
							"    pm.expect(pm.response.responseSize).to.be.equal(3420);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"634ab22e85027d01adee0738\");\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/members/me?boards=open&key={{Key}}&token={{Token}}",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"members",
						"me"
					],
					"query": [
						{
							"key": "boards",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"board is removed successfully\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/boards/{{Last_Board}}/?token={{Token}}&key={{Key}}",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"boards",
						"{{Last_Board}}",
						""
					],
					"query": [
						{
							"key": "id",
							"value": "634aaea2a33e1d05066b2898",
							"disabled": true
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Check response body include id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"id\");\r",
							"});\r",
							"pm.test(\"Check response body include name\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"name\");\r",
							"});\r",
							"pm.test(\"Check response body include idBoard\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"idBoard\");\r",
							"});\r",
							"pm.test(\"Check value of closed = false\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.closed).to.eql(false);\r",
							"});\r",
							"pm.test(\"Check limits = {}\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.limits).to.eql({});\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/lists?name=hassan&idBoard={{First_Board}}&key={{Key}}&token={{Token}}",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "name",
							"value": "hassan"
						},
						{
							"key": "idBoard",
							"value": "{{First_Board}}"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "get lists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json();\r",
							"pm.test('Number of Lists  = ' + data.length, function () {\r",
							"    console.log(\"objetss\");\r",
							"    console.log(data.length);\r",
							"    pm.expect(data.length).to.equal(3);\r",
							"});\r",
							"pm.environment.set(\"First_Listid\", pm.response.json()[0].id);\r",
							"console.log( pm.response.json()[0].id);\r",
							"\r",
							"pm.environment.set(\"Last_Listid\",pm.response.json()[2].id);\r",
							"console.log(pm.response.json()[2].id);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/boards/634c64b9988afa002a69ddff/lists?lists=open&key={{Key}}&token={{Token}}",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"boards",
						"634c64b9988afa002a69ddff",
						"lists"
					],
					"query": [
						{
							"key": "lists",
							"value": "open"
						},
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Archive or unarchive a list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"\\\"closed\\\":true\");\r",
							"});\r",
							"pm.test(\"Content-Type header is application/json\", () => {\r",
							"  pm.expect(pm.response.headers.get('Set-Cookie')).to.include('preAuthProps=s%3A6343b12093791f046ed2b834%3AisEnterpriseAdmin%3Dfalse.dk3IFsGyG1AA79RTurQhHI2bVwoMmJmpovx6RWg%2BI%2Bg; Path=/; HttpOnly');\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "{{TrelloBaseURL}}/1/lists/634c64b9988afa002a69de06/closed?key={{Key}}&token={{Token}}&value=true&id=unarchive",
					"host": [
						"{{TrelloBaseURL}}"
					],
					"path": [
						"1",
						"lists",
						"634c64b9988afa002a69de06",
						"closed"
					],
					"query": [
						{
							"key": "key",
							"value": "{{Key}}"
						},
						{
							"key": "token",
							"value": "{{Token}}"
						},
						{
							"key": "value",
							"value": "true"
						},
						{
							"key": "id",
							"value": "unarchive"
						}
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "Key",
			"value": "f0f5bc17aadd094d4e6f3ad17a3520df"
		},
		{
			"key": "Token",
			"value": "e4a44cc95a5f023bd6de5feaf290fb542ceb9585e9584c555b83c3eeabcbb3df"
		},
		{
			"key": "TrelloBaseURL",
			"value": "https://api.trello.com"
		}
	]
}